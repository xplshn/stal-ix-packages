name: Stal/IX CI

on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */24 * *'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch:
          - latest-stable
        arch:
          - x86_64
          #- aarch64

    container:
      image: alpine/git:latest

    steps:
      - name: Checkout ix repository
        uses: actions/checkout@v4
        with:
          repository: stal-ix/ix
          path: ix

      - name: Install build dependencies
        run: |
          apk add --no-cache build-base lld llvm python3 tar xz fakeroot parted git gcompat bash

      - name: Build Stal/IX rootfs
        run: |
          #!/bin/bash
          mkdir -p /dist
          
          # Check for required commands
          #for command in clang clang++ clang-cpp git lld llvm-ar llvm-nm llvm-ranlib python3 tar xz; do
          for command in python3 tar xz; do
            command -v $command > /dev/null || missing_commands+=" $command"
          done
          
          if [ -n "$missing_commands" ]; then
            echo "The following commands are required but are not installed:"
            for command in $missing_commands; do
              echo $command
            done
            exit 1
          fi
          
          # Set environment variables
          export IX_EXEC_KIND=local
          cd ix
          
          # Build process
          ./ix mut system set/stalix --failsafe --mingetty etc/zram/0 || { echo "Failed to bootstrap system realm"; exit 1; }
          ./ix gc lnk url
          rm -rf build/* trash/*
          
          ./ix mut root set/install || { echo "Failed to bootstrap root realm"; exit 1; }
          ./ix gc lnk url
          rm -rf build/* trash/*
          
          ./ix mut boot set/boot/all || { echo "Failed to bootstrap boot realm"; exit 1; }
          ./ix gc lnk url
          rm -rf build/* trash/*
          
          ./ix mut system || { echo "Failed to rebuild system realm"; exit 1; }
          ./ix gc lnk url
          rm -rf build/* trash/*
          
          ./ix mut "$(./ix list)" || { echo "Failed to rebuild the world"; exit 1; }
          ./ix gc lnk url
          rm -rf build/* trash/*
          
          ./ix mut system --seed="$(cat /dev/urandom | head -c 1000 | base64)" || { echo "Failed to add random seed"; exit 1; }
          ./ix gc lnk url
          rm -rf build/* trash/*
          
          cd ..
          tar -cvJf /dist/stalix-${{ matrix.branch }}-${{ matrix.arch }}.tar.xz ix

      - name: List contents of /dist directory
        run: ls -l /dist

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stalix-rootfs-${{ matrix.branch }}-${{ matrix.arch }}
          path: /dist/stalix-*.tar.xz
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set release tag
        id: set_tag
        run: echo "RDATE=$(date +%d-%m-%Y_%H-%M-%S)" >> $GITHUB_ENV

      - name: Create dist directory
        run: mkdir -p dist

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List all downloaded artifacts
        run: find dist -type f | sort

      - name: Create Release
        uses: softprops/action-gh-release@v2.0.6
        with:
          name: "${{ env.RDATE }}"
          tag_name: "${{ env.RDATE }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          make_latest: true
          files: |
            dist/**/*
